<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="luxe.chaos.choss.core.user.manage.dao.TokenInfoMapper">

    <!-- This UserInfoResultMap ref to UserInfo Bean -->
    <resultMap id="TokenInfoResultMap" type="luxe.chaos.choss.core.user.manage.model.TokenInfo">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="is_active" property="isActive" jdbcType="BOOLEAN"/>
        <result column="expire_time" property="expireTime" jdbcType="INTEGER"/>
        <result column="refresh_time" property="refreshTime" jdbcType="TIMESTAMP"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    </resultMap>


    <insert id="addToken" >
        INSERT INTO token_info (
            id, user_id, is_active,
            expire_time, create_time, refresh_time
        )
        VALUES (
            #{tokenInfo.id}, #{tokenInfo.userId}, #{tokenInfo.isActive},
            #{tokenInfo.expireTime}, #{tokenInfo.createTime}, #{tokenInfo.refreshTime}
        )
    </insert>

    <select id="getTokenInfoById" parameterType="String" resultMap="TokenInfoResultMap">
        SELECT *
        FROM token_info
        WHERE id = #{tokenId}
    </select>

    <delete id="deleteToken" parameterType="String">
        DELETE FROM token_info
        WHERE id = #{tokenId}
    </delete>


    <!-- only can update expireTime and isActive .. -->
    <update id="updateToken" >
        <if test="tokenInfo.id != null and tokenInfo.id != ''">
            UPDATE token_info
            <set>
                expire_time = #{tokenInfo.expireTime},
                <if test="tokenInfo.active != null">
                    is_active = #{tokenInfo.active},
                </if>
            </set>
            WHERE id = #{tokenInfo.id}
        </if>
    </update>


    <select id="getTokenInfosByUserId" parameterType="string" resultMap="TokenInfoResultMap">
        SELECT *
        FROM token_info
        WHERE user_id = #{userId}
        ORDER BY create_time DESC

    </select>
</mapper>